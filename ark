#!/bin/bash

check() {
    if [ $? -ne 0 ]; then
        echo "[Error] $1 command failed with exit code $?"
        exit 1
    fi
}

run() {
    echo -e "\e[96m$1\e[0m"
    $1
    check $1
}

if [[ "$@" =~ "clean" ]]; then
    rm -rf *.abc *.ap *.ai *.an *.pa *.abc.ll *.abc_opt.ll *.log
    exit 0
fi

file_path=$1
file_name=$(basename "$file_path" | cut -d. -f1)

if [[ "$@" =~ "abc" ]]; then
    run "es2abc $file_path --merge-abc --module --type-extractor --output $file_name.abc"
    run "ark_js_vm --enable-pgo-profiler=true --compiler-pgo-profiler-path=$file_name.ap --entry-point=$file_name $file_name.abc"
fi

for arg in "$@"; do
    if [[ "$arg" == "aot" ]]; then
        run "ark_aot_compiler --compiler-log=all0123 --log-level=warning --enable-pgo-profiler=true --compiler-pgo-profiler-path=$file_name.ap --aot-file=$file_name $file_name.abc"
    fi

    if [[ "$arg" == "asm" ]]; then
        run "ark_js_vm --compiler-log=all0123 --log-level=warning --entry-point=$file_name --aot-file=$file_name $file_name.abc"
    fi

    if [[ "$arg" == "dasm" ]]; then
        run "ark_disasm $file_name.abc $file_name.pa"
    fi
done
